<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanjia.infoshopmallmanage.mapper.UserLevelMapper">

    <resultMap type="com.wanjia.infoshopmallmanage.entity.UserLevel" id="UserLevelMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="level" column="level" jdbcType="INTEGER"/>
        <result property="levelName" column="level_name" jdbcType="VARCHAR"/>
        <result property="requireScore" column="require_score" jdbcType="INTEGER"/>
        <result property="remarks" column="remarks" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserLevelMap">
        select
          id, level, level_name, require_score, remarks
        from weathersystem.user_level
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserLevelMap">
        select
          id, level, level_name, require_score, remarks
        from weathersystem.user_level
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserLevelMap">
        select
          id, level, level_name, require_score, remarks
        from weathersystem.user_level
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
            <if test="levelName != null and levelName != ''">
                and level_name = #{levelName}
            </if>
            <if test="requireScore != null">
                and require_score = #{requireScore}
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks = #{remarks}
            </if>
        </where>
    </select>
    
    <select id="getAllUserLevels" resultMap="UserLevelMap">
        select
          id, level, level_name, require_score, remarks
        from weathersystem.user_level
        order by level asc
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into weathersystem.user_level
        <trim prefix = "(" suffix = ")" suffixOverrides=",">
            <if test="level != null">
                level,
            </if> 
            <if test="levelName != null and levelName != ''">
                level_name,
            </if> 
            <if test="requireScore != null">
                require_score,
            </if> 
            <if test="remarks != null and remarks != ''">
                remarks,
            </if> 
        </trim>
        <trim prefix = "values (" suffix = ")" suffixOverrides=",">
            <if test="level != null">
                #{level},
            </if>  
            <if test="levelName != null and levelName != ''">
                #{levelName},
            </if>  
            <if test="requireScore != null">
                #{requireScore},
            </if>  
            <if test="remarks != null and remarks != ''">
                #{remarks},
            </if>  
        </trim>
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update weathersystem.user_level
        <set>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="levelName != null and levelName != ''">
                level_name = #{levelName},
            </if>
            <if test="requireScore != null">
                require_score = #{requireScore},
            </if>
            <if test="remarks != null and remarks != ''">
                remarks = #{remarks},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from weathersystem.user_level where id = #{id}
    </delete>
	
	<!-- 根据level获取记录条数(验证新增记录时level是否重复) -->
	<select id="getCountByLevel" resultType="int">
        select
          count(id)
        from weathersystem.user_level
        where level = #{level}
    </select>
    
    <!-- 根据levelName获取记录条数(验证新增记录时levelName是否重复) -->
    <select id="getCountByLevelName" resultType="int">
        select
          count(id)
        from weathersystem.user_level
        where level_name = #{levelName}
    </select>
    
    <!-- 获取高级低分的记录条数 -->
    <select id="getHighLevelLowScoreCount" resultType="int">
        select count(id)
        from user_level 
        where level &gt; #{level} and require_score &lt;= #{requireScore}
    </select>
    
    <!-- 获取低级高分的记录条数 -->
    <select id="getLowLevelHighScoreCount" resultType="int">
        select count(id)
        from user_level 
        where level &lt; #{level} and require_score &gt;= #{requireScore}
    </select>
</mapper>